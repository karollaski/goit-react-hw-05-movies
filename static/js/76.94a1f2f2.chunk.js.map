{"version":3,"file":"static/js/76.94a1f2f2.chunk.js","mappings":"oPACA,EAA0B,sBAA1B,EAA6D,yBAA7D,EAAuG,6B,SCuDvG,EAnDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,8EACzBF,GAAW,IAEXG,EAAAA,EAAAA,IAAYT,GACTU,MAAK,SAAAP,GACJC,EAAUD,EACX,IACAQ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPT,GAAW,EACZ,IAZsB,2CAAH,qDAexBE,GACD,GAAE,CAACR,KAGF,iBAAKgB,UAAWC,EAAhB,UACGZ,GAAU,wCAAwB,MAEnC,eAAIW,UAAWC,EAAf,SACGd,EAAOe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,KAAMC,EAA1C,EAA0CA,UAA1C,OACV,gBAAIP,UAAWC,EAAf,WACE,gBACEO,MAAM,QACNC,IACEL,EAAY,yCAC0BA,GAClC,8EAENM,IAAKL,KAEP,4BACE,uBAAIC,KACJ,uCAAeC,UAZqBJ,EAD9B,QAoBnB,C,+LCpDDQ,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,sGACJF,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,UAGH,OAFlBE,EADqB,QAGdC,OAHc,sBAIzBlB,QAAQC,IAAI,sBACN,IAAIkB,MAAMF,EAASC,QALA,uBAQRD,EAASG,KAAKC,QARN,cAQrBD,EARqB,yBASpBA,GAToB,4CAAH,qDAYbE,EAAoB,mCAAG,WAAMC,GAAN,yFACXT,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DQ,IAFnD,UAKV,OAJlBN,EAD4B,QAKrBC,OALqB,sBAMhClB,QAAQC,IAAI,sBACN,IAAIkB,MAAMF,EAASC,QAPO,uBAUfD,EAASG,KAAKC,QAVC,cAU5BD,EAV4B,yBAW3BA,GAX2B,4CAAH,sDAcpBI,EAAkB,mCAAG,WAAMrC,GAAN,yFACT2B,EAAAA,EAAAA,IAAA,gBACZ3B,EADY,oBACO4B,EADP,oBADS,UAKR,OAJlBE,EAD0B,QAKnBC,OALmB,sBAM9BlB,QAAQC,IAAI,sBACN,IAAIkB,MAAMF,EAASC,QAPK,uBAUbD,EAASG,KAVI,cAU1BA,EAV0B,yBAYzBA,GAZyB,4CAAH,sDAelBxB,EAAW,mCAAG,WAAMT,GAAN,yFACF2B,EAAAA,EAAAA,IAAA,gBACZ3B,EADY,4BACe4B,EADf,oBADE,UAKD,OAJlBE,EADmB,QAKZC,OALY,sBAMvBlB,QAAQC,IAAI,sBACN,IAAIkB,MAAMF,EAASC,QAPF,uBAUND,EAASG,KAAKK,KAVR,cAUnBL,EAVmB,yBAWlBA,GAXkB,4CAAH,sDAcXM,EAAY,mCAAG,WAAMvC,GAAN,yFACH2B,EAAAA,EAAAA,IAAA,gBACZ3B,EADY,4BACe4B,EADf,2BADG,UAKF,OAJlBE,EADoB,QAKbC,OALa,sBAMxBlB,QAAQC,IAAI,sBACN,IAAIkB,MAAMF,EAASC,QAPD,uBAUPD,EAASG,KAAKC,QAVP,cAUpBD,EAVoB,yBAWnBA,GAXmB,4CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","service/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Cast_wrapper__XmIBi\",\"actorsList\":\"Cast_actorsList__iEq99\",\"actorsListItem\":\"Cast_actorsListItem__VPpyk\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchActors } from 'service/Api';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchActorsOfMovie = async () => {\n      setLoading(true);\n\n      fetchActors(movieId)\n        .then(actors => {\n          setActors(actors);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <div className={css.wrapper}>\n      {loading ? <div>Loading...</div> : null}\n\n      <ul className={css.actorsList}>\n        {actors.map(({ id, profile_path, original_name, name, character }) => (\n          <li className={css.actorsListItem} key={id}>\n            <img\n              width=\"200px\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : 'https://upload.wikimedia.org/wikipedia/commons/d/d1/Image_not_available.png'\n              }\n              alt={original_name}\n            />\n            <div>\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '32a23429c25892a6d3283f9f7a38d6eb';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  if (response.status !== 200) {\n    console.log('Ooopsss! Not work!');\n    throw new Error(response.status);\n  }\n\n  const data = await response.data.results;\n  return data;\n};\n\nexport const fetchMoviesByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n\n  if (response.status !== 200) {\n    console.log('Ooopsss! Not work!');\n    throw new Error(response.status);\n  }\n\n  const data = await response.data.results;\n  return data;\n};\n\nexport const fetchMoviesDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  if (response.status !== 200) {\n    console.log('Ooopsss! Not work!');\n    throw new Error(response.status);\n  }\n\n  const data = await response.data;\n\n  return data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  if (response.status !== 200) {\n    console.log('Ooopsss! Not work!');\n    throw new Error(response.status);\n  }\n\n  const data = await response.data.cast;\n  return data;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  if (response.status !== 200) {\n    console.log('Ooopsss! Not work!');\n    throw new Error(response.status);\n  }\n\n  const data = await response.data.results;\n  return data;\n};\n"],"names":["movieId","useParams","useState","actors","setActors","loading","setLoading","useEffect","fetchActorsOfMovie","fetchActors","then","catch","error","console","log","finally","className","css","map","id","profile_path","original_name","name","character","width","src","alt","axios","API_KEY","fetchTrending","response","status","Error","data","results","fetchMoviesByKeyword","keyword","fetchMoviesDetails","cast","fetchReviews"],"sourceRoot":""}