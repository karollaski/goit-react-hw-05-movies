{"version":3,"file":"static/js/168.3942b858.chunk.js","mappings":"sPACA,EAA0B,yBAA1B,EAAiE,6B,SCkDjE,EA9CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8EACxBF,GAAW,IAEXG,EAAAA,EAAAA,IAAaT,GACVU,MAAK,SAAAP,GACJC,EAAWD,EACZ,IACAQ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPT,GAAW,EACZ,IAZqB,2CAAH,qDAevBE,GACD,GAAE,CAACR,KAGF,gCACGK,GAAU,wCAAwB,KAEf,IAAnBF,EAAQa,QACP,gBAAKC,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGf,EAAQgB,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,SASvB,wEAIP,C,+LC/CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,sGACJF,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,UAGH,OAFlBE,EADqB,QAGdC,OAHc,sBAIzBf,QAAQC,IAAI,sBACN,IAAIe,MAAMF,EAASC,QALA,uBAQRD,EAASG,KAAKC,QARN,cAQrBD,EARqB,yBASpBA,GAToB,4CAAH,qDAYbE,EAAoB,mCAAG,WAAMC,GAAN,yFACXT,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DQ,IAFnD,UAKV,OAJlBN,EAD4B,QAKrBC,OALqB,sBAMhCf,QAAQC,IAAI,sBACN,IAAIe,MAAMF,EAASC,QAPO,uBAUfD,EAASG,KAAKC,QAVC,cAU5BD,EAV4B,yBAW3BA,GAX2B,4CAAH,sDAcpBI,EAAkB,mCAAG,WAAMlC,GAAN,yFACTwB,EAAAA,EAAAA,IAAA,gBACZxB,EADY,oBACOyB,EADP,oBADS,UAKR,OAJlBE,EAD0B,QAKnBC,OALmB,sBAM9Bf,QAAQC,IAAI,sBACN,IAAIe,MAAMF,EAASC,QAPK,uBAUbD,EAASG,KAVI,cAU1BA,EAV0B,yBAYzBA,GAZyB,4CAAH,sDAelBK,EAAW,mCAAG,WAAMnC,GAAN,yFACFwB,EAAAA,EAAAA,IAAA,gBACZxB,EADY,4BACeyB,EADf,oBADE,UAKD,OAJlBE,EADmB,QAKZC,OALY,sBAMvBf,QAAQC,IAAI,sBACN,IAAIe,MAAMF,EAASC,QAPF,uBAUND,EAASG,KAAKM,KAVR,cAUnBN,EAVmB,yBAWlBA,GAXkB,4CAAH,sDAcXrB,EAAY,mCAAG,WAAMT,GAAN,yFACHwB,EAAAA,EAAAA,IAAA,gBACZxB,EADY,4BACeyB,EADf,2BADG,UAKF,OAJlBE,EADoB,QAKbC,OALa,sBAMxBf,QAAQC,IAAI,sBACN,IAAIe,MAAMF,EAASC,QAPD,uBAUPD,EAASG,KAAKC,QAVP,cAUpBD,EAVoB,yBAWnBA,GAXmB,4CAAH,qD","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","service/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Reviews_wrapper__93MpV\",\"reviewsList\":\"Reviews_reviewsList__hDAQA\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchReviews } from 'service/Api';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReviewsFilms = async () => {\n      setLoading(true);\n\n      fetchReviews(movieId)\n        .then(reviews => {\n          setReviews(reviews);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchReviewsFilms();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? <div>Loading...</div> : null}\n\n      {reviews.length !== 0 ? (\n        <div className={css.wrapper}>\n          <ul className={css.reviewsList}>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <div>We don't have any reviews for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '32a23429c25892a6d3283f9f7a38d6eb';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  if (response.status !== 200) {\n    console.log('Ooopsss! Not work!');\n    throw new Error(response.status);\n  }\n\n  const data = await response.data.results;\n  return data;\n};\n\nexport const fetchMoviesByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n\n  if (response.status !== 200) {\n    console.log('Ooopsss! Not work!');\n    throw new Error(response.status);\n  }\n\n  const data = await response.data.results;\n  return data;\n};\n\nexport const fetchMoviesDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  if (response.status !== 200) {\n    console.log('Ooopsss! Not work!');\n    throw new Error(response.status);\n  }\n\n  const data = await response.data;\n\n  return data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  if (response.status !== 200) {\n    console.log('Ooopsss! Not work!');\n    throw new Error(response.status);\n  }\n\n  const data = await response.data.cast;\n  return data;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  if (response.status !== 200) {\n    console.log('Ooopsss! Not work!');\n    throw new Error(response.status);\n  }\n\n  const data = await response.data.results;\n  return data;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","fetchReviewsFilms","fetchReviews","then","catch","error","console","log","finally","length","className","css","map","review","author","content","id","axios","API_KEY","fetchTrending","response","status","Error","data","results","fetchMoviesByKeyword","keyword","fetchMoviesDetails","fetchActors","cast"],"sourceRoot":""}