{"version":3,"file":"static/js/936.e09653da.chunk.js","mappings":"2LACA,EAA6B,8BAA7B,EAA4E,kC,SCgC5E,EA7BmB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAMK,KAAI,SAAAC,GAAI,OACb,yBACE,SAAC,KAAD,CACEH,UAAWC,EACXG,GAAE,kBAAaD,EAAKE,IACpBC,MAAO,CAAEC,KAAMT,GAHjB,SAKGK,EAAKK,SANDL,EAAKE,GADD,KAapB,C,sICrBD,EAA0B,sB,SCoC1B,EAhCa,WACX,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOZ,EAAP,KAAca,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,8EACzBF,GAAW,IAEXG,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJP,EAASO,EACV,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPV,GAAW,EACZ,IAZsB,2CAAH,qDAcxBE,GACD,GAAE,KAGD,kBAAMd,UAAWC,EAAjB,WACE,4CACA,SAACsB,EAAA,EAAD,CAAY1B,MAAOA,IAElBc,GAAU,wCAAwB,OAGxC,C,+LCjCDa,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHV,EAAa,mCAAG,sGACJS,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,UAGH,OAFlBC,EADqB,QAGdC,OAHc,sBAIzBP,QAAQC,IAAI,sBACN,IAAIO,MAAMF,EAASC,QALA,uBAQRD,EAASG,KAAKC,QARN,cAQrBD,EARqB,yBASpBA,GAToB,4CAAH,qDAYbE,EAAoB,mCAAG,WAAMC,GAAN,yFACXR,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DO,IAFnD,UAKV,OAJlBN,EAD4B,QAKrBC,OALqB,sBAMhCP,QAAQC,IAAI,sBACN,IAAIO,MAAMF,EAASC,QAPO,uBAUfD,EAASG,KAAKC,QAVC,cAU5BD,EAV4B,yBAW3BA,GAX2B,4CAAH,sDAcpBI,EAAkB,mCAAG,WAAMC,GAAN,yFACTV,EAAAA,EAAAA,IAAA,gBACZU,EADY,oBACOT,EADP,oBADS,UAKR,OAJlBC,EAD0B,QAKnBC,OALmB,sBAM9BP,QAAQC,IAAI,sBACN,IAAIO,MAAMF,EAASC,QAPK,uBAUbD,EAASG,KAVI,cAU1BA,EAV0B,yBAYzBA,GAZyB,4CAAH,sDAelBM,EAAW,mCAAG,WAAMD,GAAN,yFACFV,EAAAA,EAAAA,IAAA,gBACZU,EADY,4BACeT,EADf,oBADE,UAKD,OAJlBC,EADmB,QAKZC,OALY,sBAMvBP,QAAQC,IAAI,sBACN,IAAIO,MAAMF,EAASC,QAPF,uBAUND,EAASG,KAAKO,KAVR,cAUnBP,EAVmB,yBAWlBA,GAXkB,4CAAH,sDAcXQ,EAAY,mCAAG,WAAMH,GAAN,yFACHV,EAAAA,EAAAA,IAAA,gBACZU,EADY,4BACeT,EADf,2BADG,UAKF,OAJlBC,EADoB,QAKbC,OALa,sBAMxBP,QAAQC,IAAI,sBACN,IAAIO,MAAMF,EAASC,QAPD,uBAUPD,EAASG,KAAKC,QAVP,cAUpBD,EAVoB,yBAWnBA,GAXmB,4CAAH,qD","sources":["webpack://react-homework-template/./src/components/MoviesList/MovieList.module.css?dfe6","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","service/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MovieList_moviesList__TM+kl\",\"moviesListItem\":\"MovieList_moviesListItem__JLpP+\"};","import { useLocation, NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.moviesList}>\n      {films.map(film => (\n        <li key={film.id}>\n          <NavLink\n            className={css.moviesListItem}\n            to={`/movies/${film.id}`}\n            state={{ from: location }}\n          >\n            {film.title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Home_wrapper__iZIsl\"};","import React, { useState, useEffect } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { fetchTrending } from 'service/Api';\nimport css from './Home.module.css';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingFilms = async () => {\n      setLoading(true);\n\n      fetchTrending()\n        .then(trendingFilms => {\n          setFilms(trendingFilms);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n    fetchTrendingFilms();\n  }, []);\n\n  return (\n    <main className={css.wrapper}>\n      <h1>Trendind today</h1>\n      <MoviesList films={films} />\n\n      {loading ? <div>Loading...</div> : null}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '32a23429c25892a6d3283f9f7a38d6eb';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  if (response.status !== 200) {\n    console.log('Ooopsss! Not work!');\n    throw new Error(response.status);\n  }\n\n  const data = await response.data.results;\n  return data;\n};\n\nexport const fetchMoviesByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n\n  if (response.status !== 200) {\n    console.log('Ooopsss! Not work!');\n    throw new Error(response.status);\n  }\n\n  const data = await response.data.results;\n  return data;\n};\n\nexport const fetchMoviesDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  if (response.status !== 200) {\n    console.log('Ooopsss! Not work!');\n    throw new Error(response.status);\n  }\n\n  const data = await response.data;\n\n  return data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  if (response.status !== 200) {\n    console.log('Ooopsss! Not work!');\n    throw new Error(response.status);\n  }\n\n  const data = await response.data.cast;\n  return data;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  if (response.status !== 200) {\n    console.log('Ooopsss! Not work!');\n    throw new Error(response.status);\n  }\n\n  const data = await response.data.results;\n  return data;\n};\n"],"names":["films","location","useLocation","className","css","map","film","to","id","state","from","title","useState","setFilms","loading","setLoading","useEffect","fetchTrendingFilms","fetchTrending","then","trendingFilms","catch","error","console","log","finally","MoviesList","axios","API_KEY","response","status","Error","data","results","fetchMoviesByKeyword","keyword","fetchMoviesDetails","movieId","fetchActors","cast","fetchReviews"],"sourceRoot":""}